{"ast":null,"code":"var _jsxFileName = \"D:\\\\SEM_7\\\\MERN\\\\job-portal-project-master\\\\job-frontend\\\\src\\\\components\\\\dashboard\\\\ManageJobs\\\\AddJob\\\\AddJob.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport { TextField, SelectInput } from \"./FormTypes\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddJob(props) {\n  let initialValues = {\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    category: \"\"\n  };\n  if (props.jobInfo) {\n    initialValues = {\n      title: props.jobInfo.title,\n      description: props.jobInfo.description,\n      startDate: props.jobInfo.startDate,\n      endDate: props.jobInfo.endDate,\n      category: props.jobInfo.category\n    };\n  }\n\n  // VALIDATION\n  const validate = Yup.object({\n    title: Yup.string().max(30).required(\"Required\"),\n    description: Yup.string().max(100, \"Must be 100 characters or less\").required(\"Required\"),\n    startDate: Yup.date().required(\"Required\"),\n    endDate: Yup.date().required(\"Required\"),\n    category: Yup.string().required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validate,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        const editedValues = {\n          ...props.jobInfo,\n          ...values\n        };\n        props.onAdd(editedValues);\n      },\n      children: formik =>\n      /*#__PURE__*/\n      // console.log(formik);\n      _jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        id: \"manageJob-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            name: \"title\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description \",\n            name: \"description\",\n            type: \"text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n            label: \"Category \",\n            name: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Software Development\",\n              children: \"Software Development\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"HR Department\",\n              children: \"HR Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Techincal and Hardware\",\n              children: \"Techincal and Hardware\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Front Desk\",\n              children: \"Front Desk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Start date \",\n            name: \"startDate\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"  End date \",\n            name: \"endDate\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = AddJob;\nvar _c;\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"names":["React","Formik","Form","TextField","SelectInput","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","AddJob","props","initialValues","title","description","startDate","endDate","category","jobInfo","validate","object","string","max","required","date","children","validationSchema","onSubmit","values","setSubmitting","editedValues","onAdd","formik","handleSubmit","id","label","name","type","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["D:/SEM_7/MERN/job-portal-project-master/job-frontend/src/components/dashboard/ManageJobs/AddJob/AddJob.js"],"sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nimport { TextField, SelectInput } from \"./FormTypes\";\nimport * as Yup from \"yup\";\nexport default function AddJob(props) {\n  let initialValues = {\n    title: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    category: \"\",\n  };\n\n  if (props.jobInfo) {\n    initialValues = {\n      title: props.jobInfo.title,\n      description: props.jobInfo.description,\n      startDate: props.jobInfo.startDate,\n      endDate: props.jobInfo.endDate,\n      category: props.jobInfo.category,\n    };\n  }\n\n  // VALIDATION\n  const validate = Yup.object({\n    title: Yup.string().max(30).required(\"Required\"),\n    description: Yup.string()\n      .max(100, \"Must be 100 characters or less\")\n      .required(\"Required\"),\n    startDate: Yup.date().required(\"Required\"),\n    endDate: Yup.date().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n  });\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validate}\n        onSubmit={(values, { setSubmitting }) => {\n          const editedValues = { ...props.jobInfo, ...values };\n          props.onAdd(editedValues);\n        }}\n      >\n        {(formik) => (\n          // console.log(formik);\n          <Form onSubmit={formik.handleSubmit} id=\"manageJob-form\">\n            <div>\n              <TextField label=\"Title\" name=\"title\" type=\"text\" />\n              <TextField\n                label=\"Description \"\n                name=\"description\"\n                type=\"text-area\"\n              />\n              <SelectInput label=\"Category \" name=\"category\">\n                <option value=\"\">Select</option>\n                <option value=\"Software Development\">\n                  Software Development\n                </option>\n                <option value=\"HR Department\">HR Department</option>\n                <option value=\"Techincal and Hardware\">\n                  Techincal and Hardware\n                </option>\n                <option value=\"Front Desk\">Front Desk</option>\n              </SelectInput>\n              <TextField label=\"Start date \" name=\"startDate\" type=\"date\" />\n              <TextField label=\"  End date \" name=\"endDate\" type=\"date\" />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}