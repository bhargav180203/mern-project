{"ast":null,"code":"var _jsxFileName = \"D:\\\\SEM_7\\\\MERN\\\\job-portal-project-master\\\\job-frontend\\\\src\\\\JobSeeker\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Jobitem from \"./Job_item\";\nimport ApplyModal from \"./ApplyModal\";\nimport classes from \"./Modalf.module.css\";\nimport Config from \"../config/Config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet jobsData = [];\nconst Jobs = () => {\n  _s();\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(false);\n  const [jobSet, setjobSet] = useState(\"\");\n  const [jobs, setJobs] = useState([]);\n  const closeModalHandler = () => {\n    setModal(false);\n  };\n  const jobApply = applyData => {\n    setModal(true);\n    setjobSet(applyData);\n  };\n  const jobSearchHandler = event => {\n    event.preventDefault();\n    setJobs(jobsData.filter(job => job.title.toLowerCase().includes(event.target.value.toLowerCase())));\n  };\n  useEffect(() => {\n    axios.get(`${Config.SERVER_URL + \"user/jobsAvailable\"}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      jobsData = response.data.jobs;\n      setJobs(response.data.jobs);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [action]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginTop: \"20px\",\n          marginLeft: \"85px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 5,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"search\",\n            onChange: jobSearchHandler,\n            placeholder: \"Search Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.grid,\n        children: jobs.map(jobItem => /*#__PURE__*/_jsxDEV(Jobitem, {\n          item: jobItem,\n          jobApply: jobApply\n        }, jobItem._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), modal && /*#__PURE__*/_jsxDEV(ApplyModal, {\n      job: jobSet,\n      onOpen: modal,\n      onClose: closeModalHandler,\n      changes: setAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"vuddh0FIIjvUsGw6x6qRI3XEL6g=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Container","axios","Jobitem","ApplyModal","classes","Config","jsxDEV","_jsxDEV","jobsData","Jobs","_s","modal","setModal","action","setAction","jobSet","setjobSet","jobs","setJobs","closeModalHandler","jobApply","applyData","jobSearchHandler","event","preventDefault","filter","job","title","toLowerCase","includes","target","value","get","SERVER_URL","headers","Authorization","localStorage","getItem","then","response","data","catch","err","console","log","children","style","marginTop","marginLeft","sm","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","placeholder","fluid","grid","map","jobItem","item","_id","onOpen","onClose","changes","_c","$RefreshReg$"],"sources":["D:/SEM_7/MERN/job-portal-project-master/job-frontend/src/JobSeeker/JobList.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Jobitem from \"./Job_item\";\nimport ApplyModal from \"./ApplyModal\";\nimport classes from \"./Modalf.module.css\";\nimport Config from \"../config/Config.json\";\n\nlet jobsData = [];\nconst Jobs = () => {\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(false);\n  const [jobSet, setjobSet] = useState(\"\");\n  const [jobs, setJobs] = useState([]);\n\n  const closeModalHandler = () => {\n    setModal(false);\n  };\n\n  const jobApply = (applyData) => {\n    setModal(true);\n    setjobSet(applyData);\n  };\n\n  const jobSearchHandler = (event) => {\n    event.preventDefault();\n    setJobs(\n      jobsData.filter((job) =>\n        job.title.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n    );\n  };\n\n  useEffect(() => {\n    axios\n      .get(`${Config.SERVER_URL + \"user/jobsAvailable\"}`, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        jobsData = response.data.jobs;\n        setJobs(response.data.jobs);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [action]);\n\n  return (\n    <div>\n      <Container>\n        <Row style={{ marginTop: \"20px\", marginLeft: \"85px\" }}>\n          <Col sm={3}></Col>\n          <Col sm={5}>\n            <input\n              className=\"form-control\"\n              type=\"search\"\n              onChange={jobSearchHandler}\n              placeholder=\"Search Jobs\"\n            ></input>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <div className={classes.grid}>\n          {jobs.map((jobItem) => (\n            <Jobitem key={jobItem._id} item={jobItem} jobApply={jobApply} />\n          ))}\n        </div>\n      </Container>\n      {modal && (\n        <ApplyModal\n          job={jobSet}\n          onOpen={modal}\n          onClose={closeModalHandler}\n          changes={setAction}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Jobs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}