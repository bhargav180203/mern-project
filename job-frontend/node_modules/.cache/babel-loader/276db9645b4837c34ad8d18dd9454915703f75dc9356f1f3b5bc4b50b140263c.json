{"ast":null,"code":"var _jsxFileName = \"D:\\\\SEM_7\\\\MERN\\\\job-portal-project-master\\\\job-frontend\\\\src\\\\components\\\\UI\\\\ChangePassword.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Form as BootStrapForm, Button } from \"react-bootstrap\";\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport classes from \"./Changepassword.module.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BootStrapForm.Group, {\n      className: `${classes.formBox} mb-2`,\n      children: [/*#__PURE__*/_jsxDEV(BootStrapForm.Label, {\n        htmlFor: props.id || props.name,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BootStrapForm.Control, {\n        className: meta.touched && meta.error && \"invalid\",\n        ...field,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n_c = MyTextInput;\nconst ChangePassword = () => {\n  _s2();\n  const selectauthToken = rootstate => rootstate.authToken;\n  const authToken = useSelector(selectauthToken);\n  console.log(authToken);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        oldPassword: \"\",\n        newPassword: \"\",\n        passwordConfirmation: \"\"\n      },\n      validationSchema: Yup.object({\n        oldPassword: Yup.string()\n        // .oneOf([authToken.password], \"Wrong Password\")\n        .required(\"Old Password Required\"),\n        newPassword: Yup.string()\n        // .notOneOf(\n        //   [authToken.password],\n        //   \"New Password should not be same as old Password\"\n        // )\n        .required(\"New Password Required\"),\n        passwordConfirmation: Yup.string().oneOf([Yup.ref(\"newPassword\")], \"Password mismatch\").required(\"Confirm New Password Required\")\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n        toast.success(\"Password Changed Successfully\", {\n          position: \"bottom-right\",\n          autoClose: 4000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center text-primary\",\n            children: \"Change Password!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Old Password\",\n            name: \"oldPassword\",\n            type: \"password\",\n            id: \"oldPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"New Password\",\n            name: \"newPassword\",\n            type: \"password\",\n            id: \"newPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Confirm New Password\",\n            name: \"passwordConfirmation\",\n            type: \"password\",\n            id: \"confirmPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s2(ChangePassword, \"4nbP1NPoVN+NqRqUhW7/mqHfHlg=\", false, function () {\n  return [useSelector];\n});\n_c2 = ChangePassword;\nexport default ChangePassword;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"ChangePassword\");","map":{"version":3,"names":["React","useSelector","Form","BootStrapForm","Button","Formik","useField","Yup","classes","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","configure","MyTextInput","label","props","_s","field","meta","children","Group","className","formBox","Label","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","Control","touched","error","_c","ChangePassword","_s2","selectauthToken","rootstate","authToken","console","log","initialValues","oldPassword","newPassword","passwordConfirmation","validationSchema","object","string","required","oneOf","ref","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","formContainer","type","_c2","$RefreshReg$"],"sources":["D:/SEM_7/MERN/job-portal-project-master/job-frontend/src/components/UI/ChangePassword.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Form as BootStrapForm, Button } from \"react-bootstrap\";\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport classes from \"./Changepassword.module.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <BootStrapForm.Group className={`${classes.formBox} mb-2`}>\n        <BootStrapForm.Label htmlFor={props.id || props.name}>\n          {label}\n        </BootStrapForm.Label>\n        <BootStrapForm.Control\n          className={meta.touched && meta.error && \"invalid\"}\n          {...field}\n          {...props}\n        />\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </BootStrapForm.Group>\n      {/* <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null} */}\n    </>\n  );\n};\n\nconst ChangePassword = () => {\n  const selectauthToken = (rootstate) => rootstate.authToken;\n  const authToken = useSelector(selectauthToken);\n  console.log(authToken);\n  return (\n    <>\n      <Formik\n        initialValues={{\n          oldPassword: \"\",\n          newPassword: \"\",\n          passwordConfirmation: \"\",\n        }}\n        validationSchema={Yup.object({\n          oldPassword: Yup.string()\n            // .oneOf([authToken.password], \"Wrong Password\")\n            .required(\"Old Password Required\"),\n          newPassword: Yup.string()\n            // .notOneOf(\n            //   [authToken.password],\n            //   \"New Password should not be same as old Password\"\n            // )\n            .required(\"New Password Required\"),\n          passwordConfirmation: Yup.string()\n            .oneOf([Yup.ref(\"newPassword\")], \"Password mismatch\")\n            .required(\"Confirm New Password Required\"),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n          toast.success(\"Password Changed Successfully\", {\n            position: \"bottom-right\",\n            autoClose: 4000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }}\n      >\n        <Form>\n          <div className={classes.formContainer}>\n            <h4 className=\"text-center text-primary\">Change Password!</h4>\n\n            <MyTextInput\n              label=\"Old Password\"\n              name=\"oldPassword\"\n              type=\"password\"\n              id=\"oldPassword\"\n            />\n            <MyTextInput\n              label=\"New Password\"\n              name=\"newPassword\"\n              type=\"password\"\n              id=\"newPassword\"\n            />\n            <MyTextInput\n              label=\"Confirm New Password\"\n              name=\"passwordConfirmation\"\n              type=\"password\"\n              id=\"confirmPassword\"\n            />\n            <Button type=\"submit\">Submit</Button>\n          </div>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default ChangePassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}